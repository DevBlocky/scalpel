on: [push]
name: CI
env:
    CI: 1

jobs:
    lint:
        runs-on: ubuntu-latest
        name: Lint ${{ matrix.build }}

        strategy:
            matrix:
                build: [format, clippy]
                include:
                    - build: format
                      components: rustfmt
                      cargo_cmd: fmt
                      cargo_args: -- --check
                    - build: clippy
                      components: rustfmt
                      cargo_cmd: clippy

        steps:
            - uses: actions/checkout@v2

            - name: Install Rust
              uses: actions-rs/toolchain@v1
              with:
                  toolchain: ${{ matrix.rust || 'stable' }}
                  profile: minimal
                  components: ${{ matrix.components }}

            # cache and install llvm
            - name: Cache LLVM
              id: cache-llvm
              uses: actions/cache@v2
              with:
                  path: ${{ runner.temp }}/llvm
                  key: llvm-11
            - name: Install LLVM
              uses: KyleMayes/install-llvm-action@v1
              with:
                  version: "11.1"
                  directory: ${{ runner.temp }}/llvm
                  cached: ${{ steps.cache-llvm.outputs.cache-hit }}

            # cache target directory
            - name: Cache Target
              uses: actions/cache@v2
              with:
                  path: |
                      ~/.cargo/registry
                      target
                  key: ${{ runner.os }}-${{ hashFiles('**/Cargo.lock') }}

            # cache rust dependency/build directories
            - name: Lint ${{ matrix.build }}
              uses: actions-rs/cargo@v1
              with:
                  command: ${{ matrix.cargo_cmd }}
                  args: ${{ matrix.cargo_args }}

    test:
        name: Test
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v2

            - name: Install Rust
              uses: actions-rs/toolchain@v1
              with:
                  toolchain: stable
                  profile: minimal

            # cache and install llvm
            - name: Cache LLVM
              id: cache-llvm
              uses: actions/cache@v2
              with:
                  path: ${{ runner.temp }}/llvm
                  key: llvm-11
            - name: Install LLVM
              uses: KyleMayes/install-llvm-action@v1
              with:
                  version: "11.1"
                  directory: ${{ runner.temp }}/llvm
                  cached: ${{ steps.cache-llvm.outputs.cache-hit }}

            # cache target directory
            - name: Cache Target
              uses: actions/cache@v2
              with:
                  path: |
                      ~/.cargo/registry
                      target
                  key: ${{ runner.os }}-${{ hashFiles('**/Cargo.lock') }}

            - name: Test
              uses: actions-rs/cargo@v1
              with:
                  command: test

    build:
        name: Build ${{ matrix.name }}
        needs: [lint, test]
        runs-on: ubuntu-latest
        strategy:
            matrix:
                name:
                    - ce-filesystem
                    - ce-rocksdb
                    - all-features
                include:
                    - name: ce-filesystem
                      build_flags: --features ce-filesystem
                    - name: ce-rocksdb
                      build_flags: --features ce-rocksdb
                    - name: all-features
                      build_flags: --all-features
        env:
            RUSTFLAGS: -C link-args=-s

        steps:
            - uses: actions/checkout@v2

            - name: Install Rust
              uses: actions-rs/toolchain@v1
              with:
                  toolchain: stable
                  profile: minimal

            # cache and install llvm
            - name: Cache LLVM
              id: cache-llvm
              uses: actions/cache@v2
              with:
                  path: ${{ runner.temp }}/llvm
                  key: llvm-11
            - name: Install LLVM
              uses: KyleMayes/install-llvm-action@v1
              with:
                  version: "11.1"
                  directory: ${{ runner.temp }}/llvm
                  cached: ${{ steps.cache-llvm.outputs.cache-hit }}

            - name: Build Release
              uses: actions-rs/cargo@v1
              with:
                  command: build
                  args: |
                      --release
                      --no-default-features
                      ${{ matrix.build_flags || '' }}
            - uses: actions/upload-artifact@v2
              with:
                  name: scalpel-${{ matrix.name }}
                  path: target/release/scalpel*

# TODO: Add build for windows systems
# Unfortunately, this isn't easy because LLVM for windows doesn't come with `llvm-config`, which is required
# to build RocksDB. So, we'll need to eventually build LLVM ourselves and cache it.
