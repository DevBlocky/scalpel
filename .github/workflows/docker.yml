on:
    push:
        branches: [main]
        tags:
            - "v*.*.*"
    pull_request:
        branches: [main]

name: docker

jobs:
    deploy:
        name: docker-deploy
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v2

            # setup tags for docker push
            - uses: crazy-max/ghaction-docker-meta@v2
              id: meta
              with:
                  images: ghcr.io/DevBlocky/scalpel
                  tags: |
                      type=ref,event=branch
                      type=ref,event=pr
                      type=semver,pattern={{version}}
                      type=semver,pattern={{major}}.{{minor}}

            # buildx is required for caching
            - uses: docker/setup-buildx-action@v1

            # cache the docker build so that it doesn't re-build every single time
            - name: cache docker
              uses: actions/cache@v2
              with:
                  path: /tmp/.buildx-cache
                  key: ${{ runner.os }}-buildx-${{ github.sha }}
                  restore-keys: |
                      ${{ runner.os}}-buildx-

            - uses: docker/login-action@v1
              if: github.event_name != 'pull_request'
              with:
                  registry: ghcr.io
                  username: ${{ github.repository_owner }}
                  password: ${{ secrets.GITHUB_TOKEN }}

            - uses: docker/build-push-action@v2
              id: docker_build
              with:
                  context: .
                  push: ${{ github.event_name != 'pull_request' }}
                  tags: ${{ steps.meta.outputs.tags }}
                  labels: ${{ steps.meta.outputs.labels }}
                  cache-from: type=local,src=/tmp/.buildx-cache
                  cache-to: type=local,dest=/tmp/.buildx-cache-new

            # temporary fix to creating huge caches
            - name: move cache
              run: |
                  rm -rf /tmp/.buildx-cache
                  mv /tmp/.buildx-cache-new /tmp/.buildx-cache

            - name: image digest
              run: echo ${{ steps.docker_build.outputs.digest }}
